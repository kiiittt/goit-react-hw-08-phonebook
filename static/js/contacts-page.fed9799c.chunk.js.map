{"version":3,"file":"static/js/contacts-page.fed9799c.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/DeleteConfirmation/DeleteConfirmation.module.css?da2e","components/ContactList/DeleteConfirmation/DeleteConfirmation.jsx","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["export const getContacts = state => state.contacts.contacts;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getStatusFilter = state => state.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"ContactForm_title__jZguf\",\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"btn\":\"ContactForm_btn__wll+u\"};","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { getContacts, getError } from '../../redux/contacts/selectors';\nimport css from './ContactForm.module.css';\n\nconst notify = {\n  error: message => toast.error(message),\n  success: message => toast.success(message),\n};\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [phone, setNumber] = useState('');\n\n  const contacts = useSelector(getContacts);\n  const error = useSelector(getError);\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n    name === 'name' ? setName(value) : setNumber(value);\n  };\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (name.trim() !== '' && phone.trim() !== '') {\n      const isExistingContact = contacts.some(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      );\n\n      if (isExistingContact) {\n        toast.error(`${name} is already in contacts`);\n        return;\n      }\n\n      if (error) {\n        notify.error('problem with server');\n        return;\n      }\n\n      dispatch(addContact({ name, phone }));\n      notify.success(`${name} adding to contacts`);\n      reset();\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div>\n      <ToastContainer />\n      <form onSubmit={handleSubmit} className={css.form}>\n        <label className={css.label}>\n          <input\n            className={css.input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleInputChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            placeholder=\"Name\"\n          />\n        </label>\n        <label className={css.label}>\n          <input\n            className={css.input}\n            type=\"tel\"\n            name=\"number\"\n            value={phone}\n            onChange={handleInputChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            placeholder=\"Phone number\"\n          />\n        </label>\n        <button className={css.btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"ContactList_title__gpugJ\",\"ul\":\"ContactList_ul__ppW9Q\",\"li\":\"ContactList_li__dzNT+\",\"name\":\"ContactList_name__UCkFW\",\"tel\":\"ContactList_tel__7uvfm\",\"btn\":\"ContactList_btn__6Piat\"};","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"DeleteConfirmation_backdrop__4-QGc\",\"modal\":\"DeleteConfirmation_modal__8oYdD\",\"btnDiv\":\"DeleteConfirmation_btnDiv__wLqm8\",\"btn\":\"DeleteConfirmation_btn__++3Qu\"};","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { deleteContact } from 'redux/contacts/operations';\nimport css from './DeleteConfirmation.module.css';\n\nconst DeleteConfirmation = ({ contact, onCancel }) => {\n  const dispatch = useDispatch();\n\n  const handleConfirmDelete = () => {\n    dispatch(deleteContact(contact.id));\n    if (deleteContact) {\n      toast.success(`${contact.name} deleted`);\n    }\n    onCancel();\n  };\n\n  return (\n    <div className={css.backdrop}>\n      <div className={css.modal}>\n        <p className={css.text}>\n          Are you sure you want to delete this contact?\n        </p>\n        <div className={css.btnDiv}>\n          <button onClick={handleConfirmDelete} className={css.btn}>\n            Delete\n          </button>\n          <button onClick={onCancel} className={css.btn}>\n            Cancel\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DeleteConfirmation;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport css from './ContactList.module.css';\nimport { getContacts, getStatusFilter } from '../../redux/contacts/selectors';\nimport DeleteConfirmation from './DeleteConfirmation/DeleteConfirmation';\n\n\n// const notify = {\n//   error: message => toast.error(message),\n//   success: message => toast.success(message),\n// };\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getStatusFilter);\n  // const isLoading = useSelector(getIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  const [isConfirmingDelete, setIsConfirmingDelete] = useState(false);\n\n  const handleDeleteClick = () => {\n    setIsConfirmingDelete(true);\n  };\n\n  const handleCancelDelete = () => {\n    setIsConfirmingDelete(false);\n  };\n\n  return (\n    <div>\n      <ul className={css.ul}>\n        {filteredContacts.map(contact => (\n          <li key={contact.id} contact={contact} className={css.li}>\n            <span className={css.name}>{contact.name}:</span>\n            <span className={css.tel}>{contact.number}</span>\n            <button\n              className={css.btn}\n              type=\"button\"\n              onClick={() => handleDeleteClick(contact.id)}\n            >\n              Delete\n            </button>\n            {isConfirmingDelete && (\n              <DeleteConfirmation\n                contact={contact}\n                onCancel={handleCancelDelete}\n              />\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"findTitle\":\"Filter_findTitle__DW5WU\",\"input\":\"Filter_input__N7T3z\"};","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport css from './Filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilterChange = event => {\n    const filterValue = event.target.value;\n    dispatch(setFilter(filterValue));\n  };\n\n  return (\n    <label className={css.label}>\n      <span className={css.findTitle}>Find contacts by name</span>\n      <input\n        className={css.input}\n        type=\"text\"\n        onChange={handleFilterChange}\n        placeholder=\"search...\"\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import ContactsForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\n\nconst ContactsPage = () => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '1rem',\n        padding: '1rem',\n      }}\n    >\n      <section>\n        <ContactsForm />\n      </section>\n      <section>\n        <Filter />\n      </section>\n      <section>\n        <ContactList />\n      </section>\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["getContacts","state","contacts","getError","error","getStatusFilter","filter","notify","message","toast","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","phone","setNumber","useSelector","handleInputChange","event","_event$currentTarget","currentTarget","value","dispatch","useDispatch","reset","_jsxs","children","_jsx","ToastContainer","onSubmit","preventDefault","trim","some","contact","toLowerCase","concat","addContact","className","css","type","onChange","pattern","title","required","placeholder","_ref","onCancel","onClick","deleteContact","id","useEffect","fetchContacts","filteredContacts","includes","isConfirmingDelete","setIsConfirmingDelete","handleCancelDelete","map","number","DeleteConfirmation","filterValue","target","setFilter","style","display","flexDirection","gap","padding","ContactsForm","Filter","ContactList"],"sourceRoot":""}